swagger: '2.0'
info:
  title: JGW Member Management System
  description: 징계(주의 및 경고) 정보를 조회 및 관리할 수 있는 api 입니다.
  contact:
    email: bbbong9@gmail.com
  version: v1
host: 127.0.0.1:8000
schemes:
- http
basePath: /
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Basic:
    type: basic
security:
- Basic: []
paths:
  /penalty/api/v1/:
    get:
      operationId: penalty_list
      summary: 다수 penalty를 조회
      description: |-
        ---
        RBAC - 2(수습 회원) 이상

        자람 그룹웨어 회원의 페널티 정보를 확인할 수 있습니다.



        ## Query parameters (공통 설명)
        **주의!** 모든 option들은 단 한개의 인자만 수용가능합니다!

         * (O) "?memberID=456465456&timeTableID=1"

         * (X) "?memberID=456465456,456456456465&timeTableID=1,123123"

        또한 모든 Option들은 And로 동작합니다.

        만약 "?memberID=456465456&timeTableID=1"라는 인자가 있다면,memberID가 "456465456"이고, timeTableID가 1인 Attendance를 찾습니다.



        ## Equal Query Options
        조건과 일치한 모든 Penalty를 확인할 수 있습니다.

        해당 옵션들은 입력된 값과 완전히 일치 되는 경우를 탐색합니다.

        "createdBy = 'system'" 옵션을 제공하면, createdBy가 "system"인 Penalty들을 조회합니다.

        |param name|type|description|
        |---|---|---|
        |targetMember|String|해당 Penalty를 가진 Member(Object)의 ID|
        |type|Bool|해당 Penalty의 타입|
        |createdBy|String|해당 Penalty를 생성한 사람|
        |modifiedBy|String|해당 Penalty를 마지막으로 수정한 사람|



        ## Range Query Options
        해당 옵션들을 사용하여 Penalty요소를 범위 설정하여 검색할 수 있습니다.

        예를들어, "createdDateTime" 옵션을 검색하고 싶다면, "startCreatedDateTime"으로 시작 범위를 설정하고"endCreatedDateTime"으로 종료 범위를 설정하여 검색할 수 있습니다.

        * 시작 범위와 종료 범위가 모두 입력되었다면, 해당 범위를 탐색합니다.

        * 시작 범위만 입력됬을 경우, 해당 시작범위에서 최대 범위(9999-12-31 59:59:59)에 해당하는 범위를 탐색합니다.

        * 종료 범위만 입력됬을 경우, 최소 범위("1000-01-01 00:00:00")에서 종료 범위까지에 해당하는 범위를 탐색합니다.

        |param name|type|start range param|end range param|description|
        |---|---|---|---|---|
        |CreatedDateTime|DateTime(yyyy-MM-dd HH:mm:ss)|startCreatedDateTime|endCreatedDateTime|해당 Penalty가 생성된 시간|
        |ModifiedDateTime|DateTime(yyyy-MM-dd HH:mm:ss)|startModifiedDateTime|endModifiedDateTime|해당 Penalty가 마지막으로 수정된 시간|



        ## Like Query Options
        조건과 유사한 모든 Penalty를 확인할 수 있습니다.

        해당 옵션들을 사용하면, 해당 문자열을 포함하는 Penalty를 조회합니다.

        예를 들어 "이것은 세미나입니다"라는 index가 있다고 가정합시다.

        "index" 인자로 "세미나" 이라는 값을 주었다면, index에 "출결"이라는 글자가 들어가는 Penalty들을 찾습니다.

        |param name|type|description|
        |---|---|---|
        |reason|String|reason|



        ## Pagination Options
        Penalty 페이지에 대한 데이터 랜더링 값을 설정할 수 있습니다.

        해당 인자를 통해 pagination처리를 할 수 있습니다. Sort Option은 아래 파트를 참고하세요.

        **주의!** pagination을 설정하지 않더라도, 모든 request는 1000의 Size로 자동으로 pagination처리가 됩니다! 만약 1000건 보다 많은 양의 데이터가 필요하다면, size를 지정해주어야합니다.

        |param name|description|size|
        |---|---|---|
        |Page의 크기|page|Page의 위치|



        ## Sort Options
        다음 옵션들을 사용하여 Penalty 데이터를 정렬할 수 있습니다.

        Sort Option은 "sort" 인자에 제공해야합니다. 위 옵션들과 다르게 Sort Option은 여러 인자들을 입력해도 됩니다.

        sort 인자에 모든 Option들을 지정했다면, 마지막 인자로 Sort 방향을 지정해주여야 합니다. ASC(오름 차순), DESC(내립차순) 2가지 옵션이 있습니다. 만약 옵션을 지정해주지 않았다면, DESC로 동작합니다.

        사용예시 "sort=member,asc", "sort=member,timeTable,desc"

        **주의!** Sort Option을 지정해주지 않더라도, 기본적으로 id에 대하여 DESC 방향으로 정렬을 진행합니다!

        |param name|description|
        |---|---|
        |id|Penalty의 ID에 대하여 정렬합니다.|
        |type|Penalty의 종류에 대하여 정렬합니다.|
        |targetMember|Penalty의 대상 Member에 대하여 정렬합니다.|
        |reason|Penalty가 부여된 사유에 대하여 정렬합니다.|
        |createdDateTime|생성된 시간순으로 정렬합니다.|
        |modifiedDateTime|마지막으로 수정된 시간 순으로 정렬합니다.|
        |createdBy|생성한자에 대하여 정렬합니다.|
        |modifiedBy|마지막으로 수정한자에 대하여 정렬합니다.|
      parameters:
      - name: targetMember
        in: query
        description: targetMember
        required: false
        type: string
      - name: type
        in: query
        description: type
        required: false
        type: string
      - name: reason
        in: query
        description: reason
        required: false
        type: string
      - name: createdBy
        in: query
        description: createdBy
        required: false
        type: string
      - name: modifiedBy
        in: query
        description: modifiedBy
        required: false
        type: string
      - name: startCreatedDateTime
        in: query
        description: startCreatedDateTime
        required: false
        type: string
      - name: endCreatedDateTime
        in: query
        description: endCreatedDateTime
        required: false
        type: string
      - name: startModifiedDateTime
        in: query
        description: startModifiedDateTime
        required: false
        type: string
      - name: endModifiedDateTime
        in: query
        description: endModifiedDateTime
        required: false
        type: string
      - name: page
        in: query
        description: A page number within the paginated result set.
        required: false
        type: integer
      - name: page_size
        in: query
        description: Number of results to return per page.
        required: false
        type: integer
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '200':
          description: '성공적으로 다수의 penalty를 조회'
          schema:
            required:
            - count
            - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/PenaltyResponse'
      tags:
      - penalty
    post:
      operationId: penalty_create
      summary: |2+

        penalty를 등록

      description: |-

        RBAC - 4(어드민)

        요청 body는 다음 두 가지 형식을 모두 지원합니다:
        1. 단일 penalty 객체
        2. penalty 객체의 배열 (다중 penalty)

        만약, 다수의 penalty를 생성하고 싶다면 request body를 다음과 같이 list 형식으로 보내면 됩니다.

        ```
        [
          {
            "target_member_id": "stringstringstringstringstri",
            "reason": "string",
            "type": true
          },
          {
            "target_member_id": "stringstringstringstringstri",
            "reason": "string",
            "type": true
          },
          ...
        ]
        ```
  
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PenaltyAddRequest'
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '201':
          description: |-

            만약, request body에 다수의 penalty data를 요청했다면, 다음과 같이 list 형식의 response가 리턴됩니다.
            ```
            [
              {
                "target_member_id": "stringstringstringstringstri", 
                "id": 1,
                "reason": "string",
                "type": true
              },
              {
                "target_member_id": "stringstringstringstringstri", 
                "id": 2,
                "reason": "string",
                "type": true
              },
              ...
            ]
            ```
          schema:
            $ref: '#/definitions/PenaltyAddRequest'
      tags:
      - penalty
    put:
      operationId: penalty_update
      summary: |2+

        다수 penalty를 업데이트

      description: |2

        RBAC - 4(어드민)

        부분 업데이트를 지원합니다.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PenaltyMultiUpdateResponse'
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '200':
          description: 성공적으로 다수의 penalty를 업데이트
          schema:
            $ref: '#/definitions/PenaltyMultiUpdateResponse'
      tags:
      - penalty
    delete:
      operationId: penalty_delete
      summary: 다수 penalty를 제거
      description: RBAC - 4(어드민)
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PenaltyMultiDeleteRequest'
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '204':
          description: 성공적으로 다수의 penalty를 삭제
          schema:
            $ref: '#/definitions/PenaltyDeleteResponse'
      tags:
      - penalty
  /penalty/api/v1/{penaltyId}/:
    get:
      operationId: penalty_read
      summary: |2+

        단일 penalty를 조회

      description: |2

        RBAC - 2 이상
      parameters:
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '200':
          description: '성공적으로 단일 penalty를 조회'
          schema:
            $ref: '#/definitions/PenaltyResponse'
      tags:
      - penalty
    put:
      operationId: penalty_update
      summary: |2+

        단일 penalty를 업데이트

      description: |2

        RBAC - 4(어드민)

        부분 업데이트를 지원합니다.
      parameters:
      - name: data
        in: body
        required: true
        schema:
          $ref: '#/definitions/PenaltyUpdateRequest'
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '200':
          description: '성공적으로 단일 penalty를 업데이트'
          schema:
            $ref: '#/definitions/PenaltyUpdateRequest'
      tags:
      - penalty
    delete:
      operationId: penalty_delete
      summary: |2+

        단일 penalty를 제거

      description: |2

        RBAC - 4(어드민)
      parameters:
      - name: uid
        in: header
        description: 요청을 보내는 유저의 UID 입니다.
        type: string
      - name: role_id
        in: header
        description: 요청을 보내는 유저의 Role ID입니다.
        type: string
      responses:
        '204':
          description: '성공적으로 단일 penalty를 삭제(response data 없음)'
      tags:
      - penalty
    parameters:
    - name: penaltyId
      in: path
      required: true
      type: string
definitions:
  PenaltyResponse:
    required:
    - id
    - target_member_id
    - target_member_name
    - type
    - reason
    type: object
    properties:
      id:
        title: Id
        type: integer
      target_member_id:
        title: Target member id
        type: string
        minLength: 1
      target_member_name:
        title: Target member name
        type: string
        minLength: 1
      type:
        title: Type
        type: boolean
      reason:
        title: Reason
        type: string
        minLength: 1
      created_date:
        title: Created date
        type: string
        format: date-time
      modified_date:
        title: Modified date
        type: string
        format: date-time
  PenaltyMultiDeleteRequest:
    type: object
    properties:
      penalty_ids:
        type: array
        items:
          type: integer
        description: 삭제할 penalty의 ID 목록
    required:
    - penalty_ids
  PenaltyDeleteResponse:
    type: object
    properties:
      message:
        type: string
        example: '총 (2)개의 Penalty를 성공적으로 삭제했습니다!'
  PenaltyMultiUpdateResponse:
    type: array
    items:
      type: object
      properties:
        target_member_id:
          type: string
          description: Target member의 ID
        id:
          type: integer
          description: Penalty의 ID
        reason:
          type: string
          description: 사유
        type:
          type: boolean
          description: penalty의 타입
  PenaltyAddRequest:
    required:
    - target_member_id
    - reason
    - type
    type: object
    properties:
      target_member_id:
        title: Target member id
        type: string
        maxLength: 28
        minLength: 28
      id:
        title: Id
        type: integer
        readOnly: true
      reason:
        title: Reason
        type: string
        maxLength: 255
        minLength: 1
      type:
        title: Type
        type: boolean
  PenaltyUpdateRequest:
    required:
    - reason
    - type
    type: object
    properties:
      id:
        title: Id
        type: integer
        minimum: 1
      reason:
        title: Reason
        type: string
        maxLength: 255
        minLength: 1
      type:
        title: Type
        type: boolean
  PenaltyId:
    required:
    - penalty_id
    type: object
    properties:
      penalty_id:
        title: Penalty id
        type: integer
